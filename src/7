#include <stdint.h>
#include <stdio.h>
#include "hardware/structs/interp.h"
#include "pico/stdio.h"
#include "pico/stdlib.h"
#include "pico/time.h"
#include <pidll.h>
#include <pid.h>


float pid[16] ={20,30,5,5,15,3};
int main(){
	stdio_init_all();
	//encoderIrqSetup();
	//initMotors();
	//initPID(&distance,&pid[3],&pid[4],&pid[5]);
	//initPID(&direction,&pid[0],&pid[1],&pid[2]);	
	//initArchi(&archi, &distance, &direction);
	//resetArchi(&archi,1000,1000);
	//commandMotors(16,17,6250/2);
	//commandMotors(14,15,6250/2);
	//sleep_ms(10000);*/
	encoderIrqSetup();
	initMotors();
	initPID(&distance,&pid[3],&pid[4],&pid[5]);
	initPID(&direction,&pid[0],&pid[1],&pid[2]);	
	initArchi(&archi, &distance, &direction);
	resetArchi(&archi,1000,1000);
	initTimers();
	int value =1000;
	for(int k=0;k<4;k++){
		while((leftcounter+rightcounter)/2<(value-50)){
			command(&archi);
		}
	value+=1000;
	resetArchi(&archi,value,value);
	}
	commandMotors(16,17,0);
	commandMotors(14,15,0);
	resetArchi(&archi,3600,4400);
	while(leftcounter<4350 | rightcounter<3550){
		command(&archi);
	}
	commandMotors(16,17,0);
	commandMotors(14,15,0);



	/*resetArchi(&archi,6000,6000);
	while((leftcounter+rightcounter)/2>(6050)){
			command(&archi);
	}
	commandMotors(16,17,0);
	commandMotors(14,15,0);*/

}
	

